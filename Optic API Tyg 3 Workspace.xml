<export><workspace name="Optic API Tyg 3"><query name="Query 1" focus="true" listorder="1" taborder="1" active="true" database="4764615340605620970" server="11761150019421516864" database-name="petstore-content" server-name="petstore" mode="xquery">xquery version "1.0-ml";
import module namespace op="http://marklogic.com/optic"
     at "/MarkLogic/optic.xqy";

let $get-pets-result := op:from-view("pets", "pets")
   =&gt; op:select(("name", "species", "birth"))
   =&gt; op:order-by("name")
   =&gt; op:result()
   
let $map := json:object()
   let $doc := &lt;doc&gt;{$get-pets-result}&lt;/doc&gt;
   let $_ := for $get-pets-result at $counter in $doc/json:object
   let $pet-name := $get-pets-result/json:entry[@key eq"pets.pets.name"]/json:value/string()
   let $pet-species := $get-pets-result/json:entry[@key eq"pets.pets.species"]/json:value/string()
   let $pet-birth := $get-pets-result/json:entry[@key eq"pets.pets.birth"]/json:value/string()
   
    let $pet-map:= map:new((
        map:entry("name",$pet-name),
        map:entry("species",$pet-species),
        map:entry("birth",$pet-birth)))
 
   return map:put($map, string($counter), $pet-map)
return $map</query><query name="return uris" focus="false" listorder="2" taborder="2" active="true" database="4764615340605620970" server="11761150019421516864" database-name="petstore-content" server-name="petstore" mode="xquery">xquery version "1.0-ml";
(:let $uris := cts:uri-match("Rottweiler.xml", "ascending", cts:and-query(cts:collection-query("pets"), "ordered"), 1.0, ()):)
let $uris := cts:uris("Rottweiler.xml", "limit=1", (), (), ())

return (count($uris), $uris)</query><query name="report generation" focus="false" listorder="3" taborder="3" active="true" database="4764615340605620970" server="11761150019421516864" database-name="petstore-content" server-name="petstore" mode="xquery">xquery version "1.0-ml";
import module namespace pet-json = "http://pets.com/pets-json" at "generate-report.xqy";
pet-json:report-generation("petstore.xml")


</query><query name="Query 3" focus="false" listorder="4" taborder="4" active="true" database="4764615340605620970" server="11761150019421516864" database-name="petstore-content" server-name="petstore" mode="xquery">xquery version "1.0-ml";
import module namespace op="http://marklogic.com/optic"
     at "/MarkLogic/optic.xqy";

let $get-pets-result := op:from-view("pets", "pets")
   (:=&gt; op:where(op:eq(op:col("name"), "Rottweiler")):)
   =&gt; op:select(("name", "species", "birth"))
   (:=&gt; op:order-by("name"):)
   =&gt; op:result()
return $get-pets-result[2]</query><query name="Query 4" focus="false" listorder="5" taborder="5" active="true" database="7826556957633511330" server="7769556172499542708" database-name="petstore-modules" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
let $uris := cts:uri-match("Rottweiler.xml", "ascending", cts:and-query(cts:collection-query("pets"), "ordered"), 1.0, ())

return (count($uris), $uris)</query><query name="Query 5" focus="false" listorder="6" taborder="6" active="true" database="4764615340605620970" server="11761150019421516864" database-name="petstore-content" server-name="petstore" mode="xquery">xquery version "1.0-ml";
xdmp:document-load("c:\Projects\PetStoreRepo\petstore\src\main\ml-modules\roche\uris.xqy",
  map:map() =&gt; map:with("uri", "uris.xqy"));
  
xdmp:document-load("c:\Projects\PetStoreRepo\petstore\src\main\ml-modules\roche\transform.xqy",
  map:map() =&gt; map:with("uri", "transform.xqy"));</query><query name="Query 6" focus="false" listorder="7" taborder="7" active="true" database="4764615340605620970" server="11761150019421516864" database-name="petstore-content" server-name="petstore" mode="xquery">xquery version "1.0-ml";
xdmp:document-delete("pets.json")
</query><query name="Query 7" focus="false" listorder="8" taborder="8" active="true" database="4764615340605620970" server="11761150019421516864" database-name="petstore-content" server-name="petstore" mode="xquery">xquery version "1.0-ml";
import module namespace op="http://marklogic.com/optic"
     at "/MarkLogic/optic.xqy";

let $get-pets-result := op:from-view("pets", "pets")
   (:=&gt; op:where(op:eq(op:col("name"), "Rottweiler")):)
   =&gt; op:select(("name", "species", "birth"))
   =&gt; op:order-by("name")
   =&gt; op:result()
   
   return $get-pets-result</query></workspace></export>
